{"version":3,"sources":["webpack:///./src/app/taskboard/crud-modal/crud-modal.component.html","webpack:///./src/app/taskboard/taskboard.component.html","webpack:///./src/app/taskboard/crud-modal/crud-modal.component.scss","webpack:///./src/app/taskboard/crud-modal/crud-modal.component.ts","webpack:///./src/app/taskboard/taskboard-routing.module.ts","webpack:///./src/app/taskboard/taskboard.component.scss","webpack:///./src/app/taskboard/taskboard.component.ts","webpack:///./src/app/taskboard/taskboard.module.ts","webpack:///./src/app/taskboard/taskboard.service.ts","webpack:///./src/app/web-request.service.ts"],"names":[],"mappings":"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","file":"taskboard-taskboard-module.js","sourcesContent":["module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">{{ModalTitle}}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n    x\\r\\n  </button>\\r\\n</div>\\r\\n<form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"submitForm()\\\">\\r\\n  <div class=\\\"modal-body taskboard-modal\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <fieldset class=\\\"form-group position-relative has-icon-left\\\">\\r\\n      \\r\\n        <input type=\\\"text\\\" [formControl]=\\\"myForm.controls['title']\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\" id=\\\"todoTitle\\\"\\r\\n          placeholder=\\\"Title\\\" (keydown.enter)=\\\"$event.preventDefault()\\\" required #todoTitle>\\r\\n        <div class=\\\"form-control-position control-position-right\\\">\\r\\n          <i class=\\\"ft-edit cursor-pointer\\\"></i>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <fieldset class=\\\"form-group position-relative has-icon-left\\\">\\r\\n      \\r\\n        <input type=\\\"text\\\" [formControl]=\\\"myForm.controls['message']\\\" formControlName=\\\"message\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\"\\r\\n          placeholder=\\\"Description\\\" (keydown.enter)=\\\"$event.preventDefault()\\\" required #todoMessage>\\r\\n        <div class=\\\"form-control-position control-position-right\\\">\\r\\n          <i class=\\\"ft-file-text\\\"></i>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <fieldset class=\\\"form-group position-relative has-icon-left\\\">\\r\\n        <select  [formControl]=\\\"myForm.controls['createdBy']\\\"  formControlName=\\\"createdBy\\\" class=\\\"form-control\\\" id=\\\"todocreatedBy\\\" (keydown.enter)=\\\"$event.preventDefault()\\\" required #todocreatedBy>\\r\\n          <option [value]=\\\"option['_id']\\\" *ngFor=\\\"let option of users\\\">{{option['username']}}</option>\\r\\n\\r\\n      </select>\\r\\n       \\r\\n      \\r\\n      \\r\\n      \\r\\n        <div class=\\\"form-control-position control-position-right\\\">\\r\\n        <i class=\\\"ft-user\\\"></i>\\r\\n      </div>\\r\\n    </fieldset>\\r\\n      <fieldset class=\\\"form-group position-relative has-icon-left\\\">\\r\\n    \\r\\n          <input type=\\\"datetime-local\\\" [formControl]=\\\"myForm.controls['createdOn']\\\" formControlName=\\\"createdOn\\\" class=\\\"form-control\\\" id=\\\"todocreatedOn\\\"\\r\\n          placeholder=\\\"createdOn\\\" (keydown.enter)=\\\"$event.preventDefault()\\\" required #todocreatedOn>\\r\\n        <div class=\\\"form-control-position control-position-right\\\">\\r\\n          <i class=\\\"ft-calendar\\\"></i>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n\\r\\n    <fieldset class=\\\"form-group position-relative has-icon-left\\\">\\r\\n    \\r\\n      <input type=\\\"datetime-local\\\" [formControl]=\\\"myForm.controls['deadline']\\\" formControlName=\\\"deadline\\\" class=\\\"form-control\\\" id=\\\"tododeadline\\\"\\r\\n      placeholder=\\\"deadline\\\" (keydown.enter)=\\\"$event.preventDefault()\\\" required #tododeadline>\\r\\n    <div class=\\\"form-control-position control-position-right\\\">\\r\\n      <i class=\\\"ft-user\\\"></i>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n  <fieldset class=\\\"form-group position-relative has-icon-left\\\">\\r\\n    <select [formControl]=\\\"myForm.controls['assignedTo']\\\" formControlName=\\\"assignedTo\\\" class=\\\"form-control\\\" id=\\\"todoassignedTo\\\" (keydown.enter)=\\\"$event.preventDefault()\\\" required #todoassignedTo>\\r\\n      <option [value]=\\\"option['_id']\\\" *ngFor=\\\"let option of usersto\\\">{{option['username']}}</option>\\r\\n  </select>  \\r\\n    \\r\\n  <div class=\\\"form-control-position control-position-right\\\">\\r\\n    <i class=\\\"ft-user\\\"></i>\\r\\n  </div>\\r\\n</fieldset>\\r\\n  <fieldset class=\\\"form-group position-relative has-icon-left\\\">\\r\\n    <select id=\\\"todostatus\\\"[formControl]=\\\"myForm.controls['status']\\\" required #todostatus>\\r\\n    <option selected>New</option>\\r\\n    <option>In-Process</option>  \\r\\n    <option>Completed</option>  \\r\\n    <option>Pending</option>\\r\\n    </select>\\r\\n  <div class=\\\"form-control-position control-position-right\\\">\\r\\n    <i class=\\\"ft-user\\\"></i>\\r\\n  </div>\\r\\n</fieldset>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer taskboard-modal-footer\\\">\\r\\n    <button class=\\\"btn btn-success btn-save\\\" [disabled]=\\\"!myForm.valid\\\">\\r\\n      Save\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"<div class=\\\"row mt-2\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div class=\\\"content-header text-left\\\">Task Board</div>\\r\\n    <p class=\\\"content-sub-header\\\"></p>\\r\\n  </div>\\r\\n  <div class=\\\"col-6 text-right\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-raised btn-danger\\\" (click)=\\\"addTask()\\\">\\r\\n      <i class=\\\"fa fa-paper-plane-o d-lg-none d-block\\\"></i>\\r\\n      <span class=\\\"d-lg-block d-none\\\">Create</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Taskboard Starts -->\\r\\n<section id=\\\"taskboard\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3 col-12\\\">\\r\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500 text-left\\\"><i class=\\\"ft-list mr-1 float-left\\\"></i> To Dos</h4>\\r\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' id=\\\"New\\\" [dragulaModel]='todo'>\\r\\n        <div *ngFor='let todo of todo' [attr.task-id]=\\\"todo.taskId\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body pt-3 text-left\\\">\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <h5 class=\\\"text-bold-500 primary float-left\\\">{{todo.taskTitle}}</h5>\\r\\n                <div class=\\\"actions float-right\\\">\\r\\n                  <i class=\\\"ft-edit cursor-pointer mr-1 info\\\" (click)=\\\"editTask(todo.taskId);\\\"></i>\\r\\n                  <i class=\\\"ft-trash-2 cursor-pointer danger\\\" (click)=\\\"deleteTask(todo.taskId);\\\"></i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p>{{todo.taskMessage}}</p>\\r\\n              <h4>{{backLog.assignedTo}}</h4>\\r\\n              <img src=\\\"assets/img/portrait/small/avatar-s-1.png\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"primary\\\">{{todo.createdOn}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3 col-12\\\">\\r\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500 text-left\\\"><i class=\\\"ft-trending-up mr-1  float-left\\\"></i> In Progress</h4>\\r\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' id=\\\"In-Process\\\" [dragulaModel]='inProcess'>\\r\\n        <div *ngFor='let inProcess of inProcess' [attr.task-id]=\\\"inProcess.taskId\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body pt-3 text-left\\\">\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <h5 class=\\\"text-bold-500 info float-left\\\">{{inProcess.taskTitle}}</h5>\\r\\n                <div class=\\\"actions float-right\\\">\\r\\n                  <i class=\\\"ft-edit cursor-pointer mr-1 info\\\" (click)=\\\"editTask(inProcess.taskId);\\\"></i>\\r\\n                  <i class=\\\"ft-trash-2 cursor-pointer danger\\\" (click)=\\\"deleteTask(inProcess.taskId);\\\"></i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p>{{inProcess.taskMessage}}</p>\\r\\n              <h4>{{backLog.assignedTo}}</h4>\\r\\n              <img src=\\\"assets/img/portrait/small/avatar-s-1.png\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"info\\\">{{inProcess.createdOn}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-3 col-12\\\">\\r\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500 text-left\\\"><i class=\\\"ft-thumbs-up mr-1  float-left\\\"></i>Completed</h4>\\r\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' id=\\\"Completed\\\" [dragulaModel]='completed'>\\r\\n        <div *ngFor='let completed of completed' [attr.task-id]=\\\"completed.taskId\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body pt-3 text-left\\\">\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <h5 class=\\\"text-bold-500 success float-left\\\">{{completed.taskTitle}}</h5>\\r\\n                <div class=\\\"actions float-right\\\">\\r\\n                  <i class=\\\"ft-edit cursor-pointer mr-1 info\\\" (click)=\\\"editTask(completed.taskId);\\\"></i>\\r\\n                  <i class=\\\"ft-trash-2 cursor-pointer danger\\\" (click)=\\\"deleteTask(completed.taskId);\\\"></i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p>{{completed.taskMessage}}</p>\\r\\n              <h4>{{backLog.assignedTo}}</h4>\\r\\n              <img src=\\\"assets/img/portrait/small/avatar-s-1.png\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"success\\\">{{completed.createdOn}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-3 col-12\\\">\\r\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500 text-left\\\"><i class=\\\"ft-alert-octagon mr-1  float-left\\\"></i>On Hold</h4>\\r\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' id=\\\"Pending\\\" [dragulaModel]='backLog'>\\r\\n        <div *ngFor='let backLog of backLog' [attr.task-id]=\\\"backLog.taskId\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body pt-3 text-left\\\">\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <h5 class=\\\"text-bold-500 warning float-left\\\">{{backLog.taskTitle}}</h5>\\r\\n                <div class=\\\"actions float-right\\\">\\r\\n                  <i class=\\\"ft-edit cursor-pointer mr-1 info\\\" (click)=\\\"editTask(backLog.taskId);\\\"></i>\\r\\n                  <i class=\\\"ft-trash-2 cursor-pointer danger\\\" (click)=\\\"deleteTask(backLog.taskId);\\\"></i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p>{{backLog.taskMessage}}</p>\\r\\n              \\r\\n              <img src=\\\"assets/img/portrait/small/avatar-s-1.png\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"success\\\">{{backLog.createdOn}}</span>\\r\\n            \\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n</section>\\r\\n<!-- Taskboard Ends -->\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2tib2FyZC9jcnVkLW1vZGFsL2NydWQtbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Output, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UserService } from 'app/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-crud-modal',\r\n  templateUrl: './crud-modal.component.html',\r\n  styleUrls: ['./crud-modal.component.scss']\r\n})\r\nexport class CrudModalComponent implements OnInit{\r\n\r\n  ModalTitle = '';\r\n  @Input() id: number;\r\n  @Input() data: {};\r\n  myForm: FormGroup;\r\n  users: any ;\r\n  usersto :any;\r\n  constructor(\r\n    private userService: UserService,\r\n   public activeModal: NgbActiveModal,\r\n   private formBuilder: FormBuilder\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userService.getUsers().subscribe(data => {\r\n      this.users=data;\r\n      this.usersto=data;\r\n    \r\n    });\r\n    this.buildItemForm(this.data);\r\n    if(this.id === 0) {\r\n      this.ModalTitle = \"Add Task\";\r\n    }\r\n    else {\r\n      this.ModalTitle = \"Edit Task\";\r\n    }\r\n  }\r\n\r\n  private buildItemForm(item) {\r\n    this.myForm = this.formBuilder.group({\r\n      title: [item.title || '', Validators.required],\r\n      message: [item.message || '', Validators.required],\r\n      createdOn: [item.createdOn || '', Validators.required],\r\n      createdBy: [item.createdBy || '', Validators.required],\r\n      deadline: [item.deadline || '', Validators.required],\r\n      assignedTo: [item.assignedTo || '', Validators.required],\r\n      status: [item.status || '', Validators.required],\r\n\r\n    });\r\n  }\r\n  submitForm() {\r\n    this.activeModal.close(this.myForm.value);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TaskboardComponent } from './taskboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n     component: TaskboardComponent,\r\n    data: {\r\n      title: 'Taskboard'\r\n    },\r\n    \r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TaskboardRoutingModule { }","module.exports = \".gh-fork {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  border: 0; }\\n\\n/* dragula-specific example page styles */\\n\\n.dragdrop-wrapper {\\n  display: table; }\\n\\n/* .dragdrop-container {\\r\\n    display: table-cell;\\r\\n    background-color: rgba(255, 255, 255, 0.2);\\r\\n    width: 25%;\\r\\n  } */\\n\\n.dragdrop-container:nth-child(odd) {\\n  background-color: rgba(0, 0, 0, 0.2); }\\n\\n/*\\r\\n   * note that styling gu-mirror directly is a bad practice because it's too generic.\\r\\n   * you're better off giving the draggable elements a unique class and styling that directly!\\r\\n   */\\n\\n.dragdrop-container > div,\\n.gu-mirror {\\n  transition: opacity 0.4s ease-in-out; }\\n\\n.dragdrop-container > div {\\n  cursor: move;\\n  cursor: grab;\\n  cursor: -webkit-grab; }\\n\\n.gu-mirror {\\n  cursor: grabbing;\\n  cursor: -webkit-grabbing; }\\n\\n.dragdrop-container .ex-moved {\\n  background-color: #e74c3c; }\\n\\n.dragdrop-container.ex-over {\\n  background-color: rgba(255, 255, 255, 0.3); }\\n\\n#left-lovehandles > div,\\n#right-lovehandles > div {\\n  cursor: initial; }\\n\\n.handle {\\n  padding: 0 5px;\\n  margin-right: 5px;\\n  background-color: rgba(0, 0, 0, 0.4);\\n  cursor: move; }\\n\\n.image-thing {\\n  margin: 20px 0;\\n  display: block;\\n  text-align: center; }\\n\\n.slack-join {\\n  position: absolute;\\n  font-weight: normal;\\n  font-size: 14px;\\n  right: 10px;\\n  top: 50%;\\n  margin-top: -8px;\\n  line-height: 16px; }\\n\\n.taskboard-modal-footer .btn-save {\\n  color: #fff !important; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFza2JvYXJkL0M6XFxVc2Vyc1xcYXN1c1xcRGVza3RvcFxccHJvamVjdHNNYW5hZ2VtZW50L3NyY1xcYXBwXFx0YXNrYm9hcmRcXHRhc2tib2FyZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdGFza2JvYXJkL3Rhc2tib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQztFQUNFLGVBQWU7RUFDZixNQUFNO0VBQ04sUUFBUTtFQUNSLFNBQVMsRUFBQTs7QUFHWCx5Q0FBQTs7QUFDQTtFQUNFLGNBQWMsRUFBQTs7QUFHaEI7Ozs7S0NFSTs7QURHSjtFQUNFLG9DQUFvQyxFQUFBOztBQUd0Qzs7O0lDQUc7O0FESUg7O0VBS0Usb0NBQW9DLEVBQUE7O0FBR3RDO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFFWixvQkFBb0IsRUFBQTs7QUFHdEI7RUFDRSxnQkFBZ0I7RUFFaEIsd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UseUJBQXlCLEVBQUE7O0FBRzNCO0VBQ0UsMENBQTBDLEVBQUE7O0FBRzVDOztFQUVFLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLG9DQUFvQztFQUNwQyxZQUFZLEVBQUE7O0FBR2Q7RUFDRSxjQUFjO0VBQ2QsY0FBYztFQUNkLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLFdBQVc7RUFDWCxRQUFRO0VBQ1IsZ0JBQWdCO0VBQ2hCLGlCQUFpQixFQUFBOztBQUduQjtFQUVJLHNCQUFzQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvdGFza2JvYXJkL3Rhc2tib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiAuZ2gtZm9yayB7XHJcbiAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgdG9wOiAwO1xyXG4gICByaWdodDogMDtcclxuICAgYm9yZGVyOiAwO1xyXG4gfVxyXG5cclxuIC8qIGRyYWd1bGEtc3BlY2lmaWMgZXhhbXBsZSBwYWdlIHN0eWxlcyAqL1xyXG4gLmRyYWdkcm9wLXdyYXBwZXIge1xyXG4gICBkaXNwbGF5OiB0YWJsZTtcclxuIH1cclxuXHJcbiAvKiAuZHJhZ2Ryb3AtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XHJcbiAgICB3aWR0aDogMjUlO1xyXG4gIH0gKi9cclxuIC5kcmFnZHJvcC1jb250YWluZXI6bnRoLWNoaWxkKG9kZCkge1xyXG4gICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiB9XHJcblxyXG4gLypcclxuICAgKiBub3RlIHRoYXQgc3R5bGluZyBndS1taXJyb3IgZGlyZWN0bHkgaXMgYSBiYWQgcHJhY3RpY2UgYmVjYXVzZSBpdCdzIHRvbyBnZW5lcmljLlxyXG4gICAqIHlvdSdyZSBiZXR0ZXIgb2ZmIGdpdmluZyB0aGUgZHJhZ2dhYmxlIGVsZW1lbnRzIGEgdW5pcXVlIGNsYXNzIGFuZCBzdHlsaW5nIHRoYXQgZGlyZWN0bHkhXHJcbiAgICovXHJcbiAuZHJhZ2Ryb3AtY29udGFpbmVyPmRpdixcclxuIC5ndS1taXJyb3Ige1xyXG4gICAvLyBtYXJnaW46IDEwcHg7XHJcbiAgIC8vIHBhZGRpbmc6IDEwcHg7XHJcbiAgIC8vIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGVhc2UtaW4tb3V0O1xyXG4gfVxyXG5cclxuIC5kcmFnZHJvcC1jb250YWluZXI+ZGl2IHtcclxuICAgY3Vyc29yOiBtb3ZlO1xyXG4gICBjdXJzb3I6IGdyYWI7XHJcbiAgIGN1cnNvcjogLW1vei1ncmFiO1xyXG4gICBjdXJzb3I6IC13ZWJraXQtZ3JhYjtcclxuIH1cclxuXHJcbiAuZ3UtbWlycm9yIHtcclxuICAgY3Vyc29yOiBncmFiYmluZztcclxuICAgY3Vyc29yOiAtbW96LWdyYWJiaW5nO1xyXG4gICBjdXJzb3I6IC13ZWJraXQtZ3JhYmJpbmc7XHJcbiB9XHJcblxyXG4gLmRyYWdkcm9wLWNvbnRhaW5lciAuZXgtbW92ZWQge1xyXG4gICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTc0YzNjO1xyXG4gfVxyXG5cclxuIC5kcmFnZHJvcC1jb250YWluZXIuZXgtb3ZlciB7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcclxuIH1cclxuXHJcbiAjbGVmdC1sb3ZlaGFuZGxlcz5kaXYsXHJcbiAjcmlnaHQtbG92ZWhhbmRsZXM+ZGl2IHtcclxuICAgY3Vyc29yOiBpbml0aWFsO1xyXG4gfVxyXG5cclxuIC5oYW5kbGUge1xyXG4gICBwYWRkaW5nOiAwIDVweDtcclxuICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTtcclxuICAgY3Vyc29yOiBtb3ZlO1xyXG4gfVxyXG5cclxuIC5pbWFnZS10aGluZyB7XHJcbiAgIG1hcmdpbjogMjBweCAwO1xyXG4gICBkaXNwbGF5OiBibG9jaztcclxuICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gfVxyXG5cclxuIC5zbGFjay1qb2luIHtcclxuICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICBmb250LXNpemU6IDE0cHg7XHJcbiAgIHJpZ2h0OiAxMHB4O1xyXG4gICB0b3A6IDUwJTtcclxuICAgbWFyZ2luLXRvcDogLThweDtcclxuICAgbGluZS1oZWlnaHQ6IDE2cHg7XHJcbiB9XHJcblxyXG4gLnRhc2tib2FyZC1tb2RhbC1mb290ZXIge1xyXG4gICAuYnRuLXNhdmUge1xyXG4gICAgIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XHJcbiAgIH1cclxuIH1cclxuIiwiLmdoLWZvcmsge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvcmRlcjogMDsgfVxuXG4vKiBkcmFndWxhLXNwZWNpZmljIGV4YW1wbGUgcGFnZSBzdHlsZXMgKi9cbi5kcmFnZHJvcC13cmFwcGVyIHtcbiAgZGlzcGxheTogdGFibGU7IH1cblxuLyogLmRyYWdkcm9wLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xyXG4gICAgd2lkdGg6IDI1JTtcclxuICB9ICovXG4uZHJhZ2Ryb3AtY29udGFpbmVyOm50aC1jaGlsZChvZGQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpOyB9XG5cbi8qXHJcbiAgICogbm90ZSB0aGF0IHN0eWxpbmcgZ3UtbWlycm9yIGRpcmVjdGx5IGlzIGEgYmFkIHByYWN0aWNlIGJlY2F1c2UgaXQncyB0b28gZ2VuZXJpYy5cclxuICAgKiB5b3UncmUgYmV0dGVyIG9mZiBnaXZpbmcgdGhlIGRyYWdnYWJsZSBlbGVtZW50cyBhIHVuaXF1ZSBjbGFzcyBhbmQgc3R5bGluZyB0aGF0IGRpcmVjdGx5IVxyXG4gICAqL1xuLmRyYWdkcm9wLWNvbnRhaW5lciA+IGRpdixcbi5ndS1taXJyb3Ige1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMgZWFzZS1pbi1vdXQ7IH1cblxuLmRyYWdkcm9wLWNvbnRhaW5lciA+IGRpdiB7XG4gIGN1cnNvcjogbW92ZTtcbiAgY3Vyc29yOiBncmFiO1xuICBjdXJzb3I6IC1tb3otZ3JhYjtcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWI7IH1cblxuLmd1LW1pcnJvciB7XG4gIGN1cnNvcjogZ3JhYmJpbmc7XG4gIGN1cnNvcjogLW1vei1ncmFiYmluZztcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWJiaW5nOyB9XG5cbi5kcmFnZHJvcC1jb250YWluZXIgLmV4LW1vdmVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U3NGMzYzsgfVxuXG4uZHJhZ2Ryb3AtY29udGFpbmVyLmV4LW92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7IH1cblxuI2xlZnQtbG92ZWhhbmRsZXMgPiBkaXYsXG4jcmlnaHQtbG92ZWhhbmRsZXMgPiBkaXYge1xuICBjdXJzb3I6IGluaXRpYWw7IH1cblxuLmhhbmRsZSB7XG4gIHBhZGRpbmc6IDAgNXB4O1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICBjdXJzb3I6IG1vdmU7IH1cblxuLmltYWdlLXRoaW5nIHtcbiAgbWFyZ2luOiAyMHB4IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLnNsYWNrLWpvaW4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcmlnaHQ6IDEwcHg7XG4gIHRvcDogNTAlO1xuICBtYXJnaW4tdG9wOiAtOHB4O1xuICBsaW5lLWhlaWdodDogMTZweDsgfVxuXG4udGFza2JvYXJkLW1vZGFsLWZvb3RlciAuYnRuLXNhdmUge1xuICBjb2xvcjogI2ZmZiAhaW1wb3J0YW50OyB9XG4iXX0= */\"","\r\nimport { Component, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { TaskBoardService } from './taskboard.service';\r\nimport { CrudModalComponent } from './crud-modal/crud-modal.component';\r\nimport { Task } from './taskboard.model';\r\nimport { DragulaService } from 'ng2-dragula';\r\n\r\n@Component({\r\n  selector: 'app-taskboard',\r\n  templateUrl: './taskboard.component.html',\r\n  styleUrls: ['./taskboard.component.scss'],\r\n  providers: [TaskBoardService],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TaskboardComponent {\r\n\r\n  @ViewChild('todoTitle', {static: false}) titleInputRef: ElementRef;\r\n  @ViewChild('todoMessage', {static: false}) messageInputRef: ElementRef;\r\n  @ViewChild('todocreatedOn', {static: false}) createdOnInputRef: ElementRef;\r\n  @ViewChild('todocreatedBy', {static: false}) createdByInputRef: ElementRef;\r\n  @ViewChild('tododeadline', {static: false}) deadlineInputRef: ElementRef;\r\n  @ViewChild('todostatus', {static: false}) statusInputRef: ElementRef;\r\n  @ViewChild('assignedTo', {static: false}) assignedToInputRef: ElementRef;\r\n\r\n  BAG = \"task-group\";\r\n\r\n  tasks: Task[];\r\n  \r\n  todo: Task[];\r\n  inProcess: Task[];\r\n  backLog: Task[];\r\n  completed: Task[];\r\n  res:any;\r\n  constructor(private dragulaService: DragulaService, private elRef: ElementRef, private taskBoardService: TaskBoardService, private modalService: NgbModal) {\r\n   // this.taskBoardService.getTasks();\r\n    \r\n    dragulaService.drop(this.BAG)\r\n      .subscribe(({ el, target }) => {\r\n        this.updateTaskStatus(el.getAttribute('task-id'), target.id)\r\n      });\r\n  }\r\n   ngOnInit() {\r\n      this.taskBoardService.getTasks1().subscribe(data => {\r\n        let res=[];\r\n        for(var i=0 ;i< Object.keys(data).length;i++)\r\n        {\r\n            let task: Task = {\r\n            taskId: data[i]._id,\r\n            id :data[i]._id,\r\n            taskTitle: data[i].title,\r\n            taskMessage: data[i].description,\r\n            createdOn: data[i].date_creation,\r\n            createdBy: data[i].createdBy,\r\n            deadline : data[i].deadline,\r\n            assignedTo: data[i].assignedTo,\r\n            status: data[i].status\r\n            }\r\n            console.log(task)\r\n            res.unshift(task); \r\n        }\r\n        console.log(res)\r\n        //alert(res)\r\n        this.tasks=res;\r\n        this.loadTasks();\r\n        //alert(this.tasks)\r\n      })\r\n     //this.tasks = this.taskBoardService.tasks;\r\n  }\r\n  loadTasks(){\r\n    this.taskBoardService.getTasks1().subscribe(data => {\r\n      let res=[];\r\n      for(var i=0 ;i< Object.keys(data).length;i++)\r\n      {\r\n          let task: Task = {\r\n          taskId: data[i]._id,\r\n          id :data[i]._id,\r\n          taskTitle: data[i].title,\r\n          taskMessage: data[i].description,\r\n          createdOn:  new Date(data[i].date_creation).toDateString(),\r\n          createdBy: new Date(data[i].createdBy).toDateString(),\r\n          deadline : data[i].deadline,\r\n          assignedTo: data[i].assignedTo,\r\n          status: data[i].status\r\n          }\r\n          console.log(task)\r\n          res.unshift(task); \r\n      }\r\n      console.log(res)\r\n      //alert(res)\r\n      this.tasks=res;\r\n      this.getAllTask();\r\n      //alert(this.tasks)\r\n    })\r\n  }\r\n  getAllTask() {\r\n    \r\n    this.todo = this.tasks.filter((task: Task) => task.status === 'New');\r\n    this.inProcess = this.tasks.filter((task: Task) => task.status === 'In-Process');\r\n    this.backLog = this.tasks.filter((task: Task) => task.status === 'Pending');\r\n    this.completed = this.tasks.filter((task: Task) => task.status === 'Completed');\r\n  }\r\n\r\n  editTask(id: number) {\r\n    alert(id)\r\n    let task: Task = this.tasks.find(x => x.taskId === id);\r\n    const modalRef = this.modalService.open(CrudModalComponent);\r\n    modalRef.componentInstance.id = id; // should be the id\r\n    modalRef.componentInstance.data = { title: task.taskTitle, message: task.taskMessage ,status:task.status,deadline:task.deadline,createdOn:task.createdOn }; // should be the data\r\n\r\n      modalRef.result.then((result) => {\r\n      console.log(result)\r\n      console.log('test')\r\n      let index = this.tasks.indexOf(task);\r\n      task.taskTitle = result.title;\r\n      task.taskMessage = result.message;\r\n      task.createdOn=result.createdOn,\r\n      task.createdBy= result.createdBy,\r\n      task.deadline = result.deadline,\r\n      task.assignedTo=result.assignedTo,\r\n      task.status= result.status\r\n      this.taskBoardService.UpdateTask(task, index,id.toString()).subscribe(data => {\r\n       // this.tasks = data;\r\n        this.loadTasks();\r\n      });\r\n\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  updateTaskStatus(id: string, status: string) {\r\n        this.taskBoardService.UpdateStatusTask(status,id).subscribe(data => {\r\n         // this.tasks = data;\r\n          this.loadTasks();\r\n        });\r\n    \r\n  }\r\n\r\n  deleteTask(id: number) {\r\n    alert(id)\r\n    this.taskBoardService.deleteTask(id.toString(),true).subscribe(data => {\r\n      this.loadTasks();\r\n    });\r\n  }\r\n\r\n  addTask() {\r\n    const modalRef = this.modalService.open(CrudModalComponent, );\r\n    modalRef.componentInstance.id = 0; // should be the id\r\n    modalRef.componentInstance.data = { title: '', message: ''}; // should be the data\r\n\r\n    modalRef.result.then((result) => {\r\n      this.taskBoardService.addNewTask(result.title, result.message,result.createdOn,result.createdBy,result.deadline,result.assignedTo,result.status).subscribe(data => {\r\n       //this.taskBoardService.addTask(result.title, result.message,result.createdOn,result.createdBy,result.deadline,result.assignedTo,result.status);\r\n        //=this.tasks = data;\r\n        console.log(data)\r\n        this.loadTasks();\r\n      });\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { DragulaModule } from 'ng2-dragula';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { TaskboardRoutingModule } from \"./taskboard-routing.module\";\r\n\r\nimport { TaskboardComponent } from \"./taskboard.component\";\r\nimport { CrudModalComponent } from './crud-modal/crud-modal.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TaskboardRoutingModule,\r\n        DragulaModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgbModule\r\n    ],\r\n    declarations: [\r\n        TaskboardComponent,\r\n        CrudModalComponent\r\n    ],\r\n    entryComponents: [\r\n        CrudModalComponent\r\n    ]\r\n})\r\nexport class TaskboardModule { }\r\n","import { id } from '@swimlane/ngx-charts/release/utils';\r\nimport { Injectable } from '@angular/core';\r\nimport { Task } from './taskboard.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, delay } from 'rxjs/operators';\r\nimport { WebRequestService } from '../web-request.service';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable()\r\nexport class TaskBoardService {\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json'\r\n        })\r\n      }\r\n    url = 'http://localhost:5000';\r\n    public tasks: Task[] = [];\r\n\r\n    constructor(private http: HttpClient,  private router: Router ,private webReqService: WebRequestService) { \r\n       //this.getTasks() ;\r\n    }\r\n    getTasks() {\r\n         let observableReq=this.http.get(`${this.url}/api/taches/getAlltaches`).subscribe(data => {\r\n            for(var i=0 ;i< Object.keys(data).length;i++)\r\n            {\r\n                let task: Task = {\r\n                taskId: data[i]._id,\r\n                id :data[i]._id,\r\n                taskTitle: data[i].title,\r\n                taskMessage: data[i].description,\r\n                createdOn: data[i].date_creation,\r\n                createdBy: data[i].createdBy,\r\n                deadline : data[i].deadline,\r\n                assignedTo: data[i].assignedTo,\r\n                status: data[i].status\r\n                }\r\n              this.tasks.unshift(task);\r\n            }\r\n            alert(this.tasks)\r\n          })\r\n    }\r\n\r\n    getTasks1(): any {\r\n      return this.http.get(`${this.url}/api/taches/getAlltaches`)\r\n      /*return this\r\n        .http\r\n        .get(`${this.url}/api/taches/getAlltaches`);*/\r\n  }\r\n   \r\n\r\n\r\n   addNew(title: string, message: string,createdOn : string,createdBy: string,deadline: string,assignedTo: string,status:string) {\r\n        let task: Task = {\r\n            taskId: Math.round(Math.random() * 10000000000),\r\n            id :\"\",\r\n            taskTitle: title,\r\n            taskMessage: message,\r\n            createdOn: createdOn,\r\n            createdBy: createdBy,\r\n            deadline : deadline,\r\n            assignedTo: assignedTo,\r\n            status: status\r\n        }\r\n        this.webReqService.post('lists',{title});\r\n\r\n        this.tasks.unshift(task);\r\n    return of(this.tasks.slice()).pipe(delay(100));\r\n        \r\n    }\r\n\r\n    addNewTask(title: string, message: string,createdOn : string,createdBy: string,deadline: string,assignedTo: string,status:string){\r\n   \r\n        let task: Task = {\r\n            taskId: Math.round(Math.random() * 10000000000),\r\n            id :\"\",\r\n            taskTitle: title,\r\n            taskMessage: message,\r\n            createdOn: createdOn,\r\n            createdBy: createdBy,\r\n            deadline : deadline,\r\n            assignedTo: assignedTo,\r\n            status: status\r\n        }\r\n        this.webReqService.post('lists',{title});\r\n        this.tasks.unshift(task);\r\n        return this\r\n        .http\r\n        .post(`${this.url}/api/taches/addTache/`,{title:title,description:message,status:status,date_creation:createdOn,assignedTo:assignedTo,createdBy:createdBy,deadline:deadline})     \r\n      \r\n  }\r\n\r\n\r\n\r\n\r\n  updateProjects(id:string,updateProject) {\r\n    return this\r\n      .http\r\n      .patch(`${this.url}/api/projects/updateProject/`+id,{updateProject})\r\n      .subscribe(()=>{  \r\n        console.log(\"Updated\");  \r\n    }); \r\n  }\r\n    UpdateTask(task: Task, index: number,id:string) {\r\n        // this.tasks.splice(index, 1, task);\r\n      alert(task.taskTitle)\r\n      return this\r\n        .http\r\n        .patch(`${this.url}/api/taches/updateTache/`+id,{title:task.taskTitle,description:task.taskMessage,status:task.status,date_creation:task.createdOn,assignedTo:task.assignedTo,createdBy:task.createdBy,deadline:task.deadline})     \r\n      \r\n        /*this.tasks = this.tasks.map(i => {\r\n            if(i.taskId === task.taskId) {\r\n              return Object.assign({}, i, task);\r\n            }\r\n            return i;\r\n          })\r\n            return of(this.tasks.slice()).pipe(delay(1000));*/\r\n         \r\n          \r\n    }\r\n    UpdateStatusTask(status :string ,id :string) {\r\n      // this.tasks.splice(index, 1, task);\r\n          return this\r\n          .http\r\n          .patch(`${this.url}/api/taches/UpdateStatustache/`+id,{status:status})\r\n          \r\n        \r\n  }\r\n\r\n    deleteTask(id:string,deleted) {\r\n    return this\r\n      .http\r\n      .patch(`${this.url}/api/taches/deletetache/`+id,{deleted:deleted});\r\n      \r\n  }\r\n    deleteTask1(index: number) {\r\n        this.tasks.splice(index, 1);\r\n        return of(this.tasks.slice()).pipe(delay(100));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebRequestService {\r\nreadonly ROOT_URL\r\n  constructor(private http:HttpClient) {\r\n    this.ROOT_URL ='http://localhost:5000';\r\n   }\r\n   get (url : string)\r\n   {\r\n     return this.http.get(this.ROOT_URL+\"/\"+url);\r\n   }\r\n   post (url : string,payload: Object)\r\n   {\r\n     return this.http.post(this.ROOT_URL+\"/\"+url,payload);\r\n   }\r\n   patch (url : string,payload: Object)\r\n   {\r\n     return this.http.patch(this.ROOT_URL+\"/\"+url,payload);\r\n   }\r\n   delete (url : string)\r\n   {\r\n     return this.http.delete(this.ROOT_URL+\"/\"+url);\r\n   }\r\n}\r\n"],"sourceRoot":""}