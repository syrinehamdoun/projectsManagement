{"version":3,"sources":["webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.component.scss","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/user/user.module.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["module.exports = \"\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"content-header\\\">Add User</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <section id=\\\"ngx\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-content\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <aw-wizard #wizard navBarLayout=\\\"large-empty-symbols\\\">\\r\\n                    <aw-wizard-step [stepTitle]=\\\"'Steptitle 1'\\\" [navigationSymbol]=\\\"{ symbol: '&#xf007;', fontFamily: 'FontAwesome' }\\\">\\r\\n                        <form #personalForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n                            <h4 class=\\\"head text-center\\\">Please tell us about yourself.</h4>\\r\\n                            <br/>\\r\\n                            <div class='row'>\\r\\n                                <div class='col-12'>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class='col-12 col-sm-6'>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"form-control-label\\\" for=\\\"firstname\\\">First Name</label>\\r\\n                                                <input class=\\\"form-control input-md\\\" [(ngModel)]=\\\"userName\\\"  #firstname=\\\"ngModel\\\" required id=\\\"firstname\\\" name=\\\"firstname\\\" type=\\\"text\\\">\\r\\n                                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!firstname.valid && (firstname.dirty || firstname.touched)\\\">This field is required!</small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class='col-12 col-sm-6'>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"form-control-label\\\" for=\\\"lastname\\\">Last Name </label>\\r\\n                                                <input class=\\\"form-control input-md\\\" [(ngModel)]=\\\"userLastName\\\" #lastname=\\\"ngModel\\\" required id=\\\"lastname\\\" name=\\\"lastname\\\" type=\\\"text\\\">\\r\\n                                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!lastname.valid && (lastname.dirty || lastname.touched)\\\">This field is required!</small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-control-label\\\" for=\\\"email\\\">Email</label>\\r\\n                                        <input class=\\\"form-control input-md\\\" [(ngModel)]=\\\"userEmail\\\" #email=\\\"ngModel\\\" required email id=\\\"email\\\" name=\\\"email\\\" type=\\\"text\\\">{{ ngModel }}\\r\\n                                        <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!email.valid && (email.dirty || email.touched)\\\">Please enter a valid email!</small>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-control-label\\\" for=\\\"userFile\\\">Email</label>\\r\\n                                        <input class=\\\"form-control input-md\\\" [(ngModel)]=\\\"userFile\\\" #userFile=\\\"ngModel\\\" required  id=\\\"userFile\\\" name=\\\"userFile\\\" type=\\\"file\\\">{{ ngModel }}\\r\\n                                       \\r\\n                                    </div>\\r\\n                                    \\r\\n                      \\r\\n  \\r\\n                                    <div class=\\\"form-group text-center\\\">\\r\\n                                        <button type=\\\"button\\\" uiSref=\\\"work\\\" class=\\\"btn btn-info btn-raised\\\" [disabled]=\\\"!personalForm.valid\\\" awNextStep>\\r\\n                                            Next\\r\\n                                            <span style=\\\"margin-left:10px;\\\">\\r\\n                                                <i class=\\\"ft-chevron-right\\\"></i>\\r\\n                                            </span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </aw-wizard-step>\\r\\n                    <aw-wizard-step  [stepTitle]=\\\"'Steptitle 2'\\\" [navigationSymbol]=\\\"{ symbol: '&#xf0b1;', fontFamily: 'FontAwesome' }\\\">\\r\\n                        <form #workForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n                            <h4 class=\\\"head text-center\\\">What do you do?</h4>\\r\\n                            <br/>\\r\\n                            <div class='row justify-content-center'>\\r\\n                                <div class='col-2'>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <div class=\\\"custom-control custom-radio m-0\\\">\\r\\n                                            <input type=\\\"radio\\\" [(ngModel)]=\\\"userWork\\\" #work required id=\\\"customRadioInline1\\\" name=\\\"work\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\">\\r\\n                                            <label class=\\\"custom-control-label\\\" for=\\\"customRadioInline1\\\">Design</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"custom-control custom-radio m-0\\\">\\r\\n                                            <input type=\\\"radio\\\" [(ngModel)]=\\\"userWork\\\" #work required id=\\\"customRadioInline2\\\"  name=\\\"work\\\" class=\\\"custom-control-input\\\" value=\\\"2\\\">\\r\\n                                            <label class=\\\"custom-control-label\\\" for=\\\"customRadioInline2\\\">Code</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"custom-control custom-radio m-0\\\">\\r\\n                                            <input type=\\\"radio\\\" [(ngModel)]=\\\"userWork\\\" #work required id=\\\"customRadioInline3\\\" checked name=\\\"work\\\" class=\\\"custom-control-input\\\" value=\\\"3\\\">\\r\\n                                            <label class=\\\"custom-control-label\\\" for=\\\"customRadioInline3\\\">Deploy</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group text-center space-20\\\">\\r\\n                                <button uiSref=\\\"personal\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-secondary mr-1\\\" awPreviousStep>\\r\\n                                    <span style=\\\"margin-right:10px;\\\">\\r\\n                                        <i class=\\\"ft-chevron-left\\\"></i>\\r\\n                                    </span> Previous</button>\\r\\n                                <button uiSref=\\\"address\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-info\\\" [disabled]=\\\"!workForm.valid\\\" awNextStep>\\r\\n                                    Next\\r\\n                                    <span style=\\\"margin-left:10px;\\\">\\r\\n                                        <i class=\\\"ft-chevron-right\\\"></i>\\r\\n                                    </span>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </form>                        \\r\\n                    </aw-wizard-step>\\r\\n                    <aw-wizard-step [stepTitle]=\\\"'Steptitle 3'\\\" [navigationSymbol]=\\\"{ symbol: '&#xf0ac;', fontFamily: 'FontAwesome' }\\\">\\r\\n                        <form #addressForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n                            <h4 class=\\\"head text-center\\\">Where do you live?</h4>\\r\\n                            <br/>\\r\\n                            <div class='row'>\\r\\n                                <div class='col-sm-12'>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-control-label\\\" for=\\\"street\\\">Street Address</label>\\r\\n                                        <input class=\\\"form-control input-md\\\" [(ngModel)]=\\\"userStreet\\\" #street=\\\"ngModel\\\" required id=\\\"street\\\" name=\\\"street\\\" type=\\\"text\\\">\\r\\n                                        <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!street.valid && (street.dirty || street.touched)\\\">This field is required!</small>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                      <label class=\\\"form-control-label\\\" for=\\\"phone\\\">Phone</label>\\r\\n                                      <input class=\\\"form-control input-md\\\" [(ngModel)]=\\\"userPhone\\\" #phone=\\\"ngModel\\\" required id=\\\"phone\\\" name=\\\"phone\\\" type=\\\"text\\\">\\r\\n                                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!phone.valid && (phone.dirty || phone.touched)\\\">This field is required!</small>\\r\\n  \\r\\n                                  </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class='col-12 col-sm-4'>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"form-control-label\\\" for=\\\"city\\\">City</label>\\r\\n                                                <input class=\\\"form-control input-md\\\" [(ngModel)]=\\\"userCity\\\" #city=\\\"ngModel\\\" required id=\\\"city\\\" name=\\\"city\\\" type=\\\"text\\\">\\r\\n                                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!city.valid && (city.dirty || city.touched)\\\">This field is required!</small>\\r\\n  \\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class='col-4 col-sm-offset-1 col-sm-3'>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"form-control-label\\\" for=\\\"state\\\">State</label>\\r\\n                                                <input class=\\\"form-control input-md\\\" [(ngModel)]=\\\"userState\\\" #state=\\\"ngModel\\\" required id=\\\"state\\\" name=\\\"state\\\" type=\\\"text\\\">\\r\\n                                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!state.valid && (state.dirty || state.touched)\\\">This field is required!</small>\\r\\n  \\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class='col-offset-1 col-7 col-sm-offset-1 col-sm-3'>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"form-control-label\\\" for=\\\"zip\\\">Zip</label>\\r\\n                                                <input class=\\\"form-control input-md\\\" [(ngModel)]=\\\"userZip\\\" #zip=\\\"ngModel\\\" required id=\\\"zip\\\" name=\\\"zip\\\" type=\\\"text\\\">\\r\\n                                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!zip.valid && (zip.dirty || zip.touched)\\\">This field is required!</small>\\r\\n  \\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                        <div class='col-6 col-sm-offset-1 col-sm-3'>\\r\\n                                          <div class=\\\"form-group\\\">\\r\\n                                              <label class=\\\"form-control-label\\\" for=\\\"country\\\">Country</label>\\r\\n                                              <input class=\\\"form-control input-md\\\" [(ngModel)]=\\\"userCountry\\\" #country=\\\"ngModel\\\" required id=\\\"country\\\" name=\\\"country\\\" type=\\\"text\\\">\\r\\n                                              <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!country.valid && (country.dirty || country.touched)\\\">This field is required!</small>\\r\\n      \\r\\n                                          </div>\\r\\n                                      </div>\\r\\n      \\r\\n                                        <div class='col-6 col-sm-offset-1 col-sm-3'>\\r\\n                                          <div class=\\\"form-group\\\">\\r\\n                                              <label class=\\\"form-control-label\\\" for=\\\"password\\\">Password</label>\\r\\n                                              <input class=\\\"form-control input-md\\\" [(ngModel)]=\\\"userPassword\\\" #password=\\\"ngModel\\\" required id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\">\\r\\n                                              <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!password.valid && (password.dirty || password.touched)\\\">This field is required!</small>\\r\\n                                          </div>\\r\\n                                      </div>\\r\\n  \\r\\n                                      <div class='col-offset-1 col-6 col-sm-offset-1 col-sm-3'>\\r\\n                                          <div class=\\\"form-group\\\">\\r\\n                                              <label class=\\\"form-control-label\\\" for=\\\"confPassword\\\">Confirm Password</label>\\r\\n                                              <input class=\\\"form-control input-md\\\" [(ngModel)]=\\\"userConfPassword\\\" #confPassword=\\\"ngModel\\\" required id=\\\"confPassword\\\" name=\\\"confPassword\\\" type=\\\"password\\\">\\r\\n                                              <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!confPassword.valid && (confPassword.dirty || confPassword.touched)\\\">This field is required!</small>\\r\\n                                          </div>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n  \\r\\n                                    <div class=\\\"form-group text-center\\\">\\r\\n                                        <button uiSref=\\\"work\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-secondary mr-1\\\" awPreviousStep>\\r\\n                                            <span style=\\\"margin-right:10px;\\\">\\r\\n                                                <i class=\\\"ft-chevron-left\\\"></i>\\r\\n                                            </span> Previous</button>\\r\\n                                        <button uiSref=\\\"result\\\" type=\\\"button\\\"  (click)=\\\"onSubmit()\\\"  class=\\\"btn btn-raised btn-success\\\" [disabled]=\\\"!addressForm.valid\\\" awResetWizard>\\r\\n                                            Finish\\r\\n                                            <span style=\\\"margin-left:10px;\\\">\\r\\n                                                <i class=\\\"ft-chevron-right\\\"></i>\\r\\n                                            </span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </aw-wizard-step>\\r\\n                </aw-wizard>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n\\r\\n<div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"content-header\\\">Users</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <!--built-in column filter types Starts-->\\r\\n  <section id=\\\"filter\\\">\\r\\n    <div class=\\\"row text-left\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-content\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"table-responsive\\\">\\r\\n                <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"Users\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\" (editConfirm)=\\\"onSaveConfirm($event)\\\"\\r\\n                (createConfirm)=\\\"onCreateConfirm($event)\\\"></ng2-smart-table>            </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n  <!--built-in column filter types Ends-->\\r\\n  \\r\\n  \\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserComponent } from \"./user.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserComponent,\r\n    data: {\r\n      title: 'user'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { value } from './../shared/data/dropdowns';\r\nimport { UserService } from './user.service';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport * as tableData from '../shared/data/smart-data-table';\r\nimport { stringify } from 'querystring';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n\r\n})\r\nexport class UserComponent implements OnInit {\r\n  settings = {\r\n    delete: {\r\n      confirmDelete: true,\r\n      deleteButtonContent: '<i class=\"ft-x danger font-medium-1 mr-2\" ></i>',\r\n      saveButtonContent: 'save',\r\n      cancelButtonContent: 'cancel'\r\n    },\r\n    add: {\r\n      confirmCreate: true,\r\n    },\r\n    edit: {\r\n      confirmSave: true,\r\n      editButtonContent: '<i class=\"ft-edit-2 info font-medium-1 mr-2\"></i>'\r\n    },\r\n    columns: {\r\n      \r\n      username: {\r\n        title: 'User Name',\r\n      },\r\n     \r\n      email: {\r\n        title: 'Email',\r\n      },\r\n      phone: {\r\n        title: 'phone',\r\n      },\r\n    },\r\n  };\r\nsource: any;\r\nfilterSource: any;\r\nalertSource: any;\r\nUsers: any ;\r\nuserName:any ;\r\nuserLastName:any;\r\nuserEmail:any;\r\nuserWork:any;\r\nuserStreet:any;\r\nuserCity:any;\r\nuserState:any;\r\nuserZip:any;\r\nuserPhone:any;\r\nuserPassword:any;\r\nuserConfirmPassword:any;\r\nuserCountry:any;\r\n\r\n\r\n\r\n\r\n  constructor(private http: HttpClient,private UserService: UserService) { }\r\n\r\n \r\n  filtersettings = tableData.filtersettings;\r\n  alertsettings = tableData.alertsettings;\r\n  street: string=''\r\n  loadData(){\r\n    this.UserService.getUsers().subscribe(data => {\r\n      console.log(data)\r\n        this.Users=data\r\n       /* for(var i=0 ;i< Object.keys(data).length;i++)\r\n        {\r\n          if (data[i].deleted==true) {\r\n            this.clients.splice(i);\r\n          }\r\n        }*/\r\n        this.filterSource = this.Users;\r\n        this.source = this.Users;\r\n        this.alertSource=this.Users;  \r\n      });\r\n  }\r\n  ngOnInit() {\r\n    //this.lastname.value=\"emna\";\r\n    this.loadData();\r\n   \r\n  }\r\n\r\n  \r\n  onSubmit(){\r\n    this.UserService.addUsers({username:this.userName+' '+this.userLastName,email: this.userEmail,\r\n      phone: this.userPhone, password:this.userPassword,city:this.userCity,admin:0,state:this.userState,\r\n      zip:this.userZip,country:this.userCountry,role:parseInt(this.userWork)\r\n    });\r\n    this.loadData();\r\n    console.log({username:this.userName,email: this.userEmail,phone: this.userPhone, password:this.userLastName});\r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n    // And the listener code which asks the DataSource to filter the data:\r\n    onSearch(query: string = '') {\r\n      alert('hello')\r\n      this.source.setFilter([\r\n          // fields we want to inclue in the search\r\n          {\r\n              field: 'id',\r\n              search: query,\r\n          },\r\n          {\r\n              field: 'name',\r\n              search: query,\r\n          },\r\n          {\r\n              field: 'username',\r\n              search: query,\r\n          },\r\n          {\r\n              field: 'email',\r\n              search: query,\r\n          },\r\n          {\r\n              field: 'phone',\r\n              search: query,\r\n          },\r\n         \r\n      ],);\r\n      // second parameter specifying whether to perform 'AND' or 'OR' search \r\n      // (meaning all columns should contain search query or at least one)\r\n      // 'AND' by default, so changing to 'OR' by setting false here\r\n  }\r\n\r\n  //  For confirm action On Delete\r\n  onDeleteConfirm(event) {\r\n      if (window.confirm('Are you sure you want to delete?')) {\r\n          event.confirm.resolve();\r\n          event.data.deleted=true;\r\n          this.UserService.deleteUsers(event.data._id,event.data.deleted);\r\n      } else {\r\n          event.confirm.reject();\r\n      }\r\n  }\r\n\r\n\r\n  //  For confirm action On Save\r\n  onSaveConfirm(event) {\r\n      if (window.confirm('Are you sure you want to save?')) {\r\n        event.confirm.resolve(event.newData);\r\n        event.newData.phone=parseInt(event.newData.phone);\r\n       // this.clientService.updateClients(event.data._id,event.newData);           \r\n      } else {\r\n          event.confirm.reject();\r\n      }\r\n  }\r\n  private newClient:string[] = [];\r\n\r\n  //  For confirm action On Create\r\n  onCreateConfirm(event) {\r\n      if (window.confirm('Are you sure you want to create?')) {\r\n          event.confirm.resolve(event.newData);\r\n          //event.newData.phone=parseInt(event.newData.phone);\r\n          console.log( event.newData)\r\n          \r\n         this.UserService.addUsers(event.newData);\r\n      } else {\r\n          event.confirm.reject();\r\n      }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { UserRoutingModule } from \"./user-routing.module\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CustomFormsModule } from 'ng2-validation';\r\nimport { MatchHeightModule } from \"../shared/directives/match-height.directive\";\r\nimport { ArchwizardModule } from 'angular-archwizard';\r\nimport { UserComponent } from './user.component';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        UserRoutingModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        ArchwizardModule,\r\n        CustomFormsModule,\r\n        MatchHeightModule,\r\n        NgbModule,\r\n        Ng2SmartTableModule\r\n    ],\r\n    declarations: [\r\n    \r\n        UserComponent\r\n    ]\r\n\r\n})\r\nexport class UserModule { }\r\n"],"sourceRoot":""}